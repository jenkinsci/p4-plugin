package org.jenkinsci.plugins.p4.workspace;

import com.perforce.p4java.client.IClient;
import com.perforce.p4java.server.IOptionsServer;
import hudson.Extension;
import org.jenkinsci.Symbol;
import org.kohsuke.stapler.DataBoundConstructor;

import java.io.Serializable;
import java.util.logging.Logger;

public class StreamAtChangeWorkspaceImpl extends StreamWorkspaceImpl implements Serializable {

    private static final long serialVersionUID = 1L;
    private final int streamAtChange;
    private static Logger logger = Logger.getLogger(StreamWorkspaceImpl.class.getName());

    @DataBoundConstructor
    public StreamAtChangeWorkspaceImpl(String charset, boolean pinHost, String streamName, String format, int streamAtChange) {
        super(charset, pinHost, streamName, format);
        this.streamAtChange=streamAtChange;
    }

    public int getStreamAtChange() {
        return streamAtChange;
    }

    @Override
    public IClient setClient(IOptionsServer connection, String user)
            throws Exception {

        IClient iclient = super.setClient(connection,user);
        iclient.setStreamAtChange(getStreamAtChange());

        return iclient;
    }

    @Override
    public WorkspaceType getType() {
        return WorkspaceType.STREAM_AT_CHANGE;
    }

    @Extension
    @Symbol("streamSpecAtChange")
    public static final class DescriptorImpl extends WorkspaceDescriptor {

        @Override
        public String getDisplayName() {
            return "Streams (At Change) (view generated by Perforce for each node)";
        }
    }
}
